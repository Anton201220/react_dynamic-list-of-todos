{"version":3,"sources":["types/Filter.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","services/getFilteredTodos.ts","index.tsx"],"names":["FilterType","TodoList","todos","onShowModal","selectedTodoId","className","map","todo","id","completed","classNames","title","type","onClick","TodoFilter","filterParams","setFilterParams","query","status","value","onChange","event","params","target","ALL","ACTIVE","COMPLETED","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","onCloseModal","useState","loadingUser","setLoadingUser","user","setUser","userId","useEffect","getUser","participant","catch","href","email","name","App","loading","setLoading","setTodos","selectedTodo","setSelectedTodo","filteredTodos","filter","toLowerCase","includes","trim","getFilteredTodos","todosList","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8a0f6d72.chunk.js","sourcesContent":["export enum FilterType {\n  ALL = 'all',\n  COMPLETED = 'completed',\n  ACTIVE = 'active',\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[];\n  onShowModal: (todo: Todo) => void;\n  selectedTodoId: number | undefined,\n}\n\nexport const TodoList: React.FC <Props> = ({\n  todos,\n  onShowModal,\n  selectedTodoId,\n}) => (\n\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <tr\n          data-cy=\"todo\"\n          className=\"\"\n          key={todo.id}\n        >\n          <td className=\"is-vcentered\">\n            {todo.id}\n          </td>\n\n          {todo.completed ? (\n            <td className=\"is-vcentered\">\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            </td>\n          ) : (\n            <td className=\"is-vcentered\" />\n          )}\n\n          <td className=\"is-vcentered is-expanded\">\n            <p className={classNames({\n              'has-text-success': todo.completed,\n              'has-text-danger': !todo.completed,\n            })}\n            >\n              {todo.title}\n            </p>\n          </td>\n\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => onShowModal(todo)}\n            >\n              <span className=\"icon\">\n                {selectedTodoId === todo.id ? (\n                  <i className=\"far fa-eye-slash\" />\n                ) : (\n                  <i className=\"far fa-eye\" />\n                )}\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","import React from 'react';\nimport { FilterType } from '../../types/Filter';\nimport { FilterParams } from '../../types/FilterParams';\n\ninterface Props {\n  filterParams: FilterParams,\n  setFilterParams: React.Dispatch<React.SetStateAction<FilterParams>>,\n}\n\nexport const TodoFilter: React.FC <Props> = ({\n  filterParams,\n  setFilterParams,\n}) => {\n  const { query, status } = filterParams;\n\n  const handleFilterChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setFilterParams(params => ({\n      ...params,\n      status: event.target.value as FilterType,\n    }));\n  };\n\n  const handleQueryChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setFilterParams(params => ({\n      ...params,\n      query: event.target.value,\n    }));\n  };\n\n  const handleQueryClear = () => {\n    setFilterParams(params => ({\n      ...params,\n      query: '',\n    }));\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={status}\n            onChange={handleFilterChange}\n          >\n            <option value={FilterType.ALL}>All</option>\n            <option value={FilterType.ACTIVE}>Active</option>\n            <option value={FilterType.COMPLETED}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleQueryChange}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            <button\n              data-cy=\"clearSearchButton\"\n              aria-label=\"Clear search\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={handleQueryClear}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useState, useEffect } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\n\ninterface Props {\n  todo: Todo;\n  onCloseModal: () => void;\n}\n\nexport const TodoModal: React.FC <Props> = ({\n  todo,\n  onCloseModal,\n}) => {\n  const [loadingUser, setLoadingUser] = useState(true);\n  const [user, setUser] = useState<User | null>(null);\n\n  const {\n    id, title, completed, userId,\n  } = todo;\n\n  useEffect(() => {\n    setLoadingUser(true);\n    getUser(userId)\n      .then(participant => {\n        setUser(participant);\n        setLoadingUser(false);\n      })\n      .catch(() => {\n        setLoadingUser(false);\n      });\n  }, [userId]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {loadingUser ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              aria-label=\"Cloase window\"\n              onClick={onCloseModal}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useState, useEffect } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\nimport { FilterType } from './types/Filter';\nimport { FilterParams } from './types/FilterParams';\nimport { getFilteredTodos } from './services/getFilteredTodos';\n\nexport const App: React.FC = () => {\n  const [loading, setLoading] = useState(false);\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [filterParams, setFilterParams] = useState<FilterParams>({\n    query: '',\n    status: FilterType.ALL,\n  });\n\n  const filteredTodos = getFilteredTodos(todos, filterParams);\n\n  useEffect(() => {\n    setLoading(true);\n    getTodos().then((todosList) => {\n      setTodos(todosList);\n      setLoading(false);\n    });\n  }, []);\n\n  const handleShowModal = (todo: Todo) => {\n    setSelectedTodo(todo);\n  };\n\n  const handleCloseModal = () => {\n    setSelectedTodo(null);\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                filterParams={filterParams}\n                setFilterParams={setFilterParams}\n              />\n            </div>\n\n            <div className=\"block\">\n              {loading ? <Loader /> : (\n                <TodoList\n                  todos={filteredTodos}\n                  onShowModal={handleShowModal}\n                  selectedTodoId={selectedTodo?.id}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo\n    && (\n      <TodoModal\n        todo={selectedTodo}\n        onCloseModal={handleCloseModal}\n      />\n    )}\n    </>\n  );\n};\n","import { FilterParams } from '../types/FilterParams';\nimport { FilterType } from '../types/Filter';\nimport { Todo } from '../types/Todo';\n\nexport const getFilteredTodos = (\n  todos: Todo[],\n  { query, status }: FilterParams,\n) => {\n  return todos\n    .filter(todo => {\n      return todo.title.toLowerCase().includes(query.trim().toLowerCase());\n    })\n    .filter(({ completed }) => {\n      switch (status) {\n        case FilterType.ACTIVE:\n          return !completed;\n        case FilterType.COMPLETED:\n          return completed;\n        default:\n          return true;\n      }\n    });\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}